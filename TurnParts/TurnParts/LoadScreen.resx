<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>